import os
import subprocess
import sys

def check_docker():
    """Check if Docker is installed."""
    try:
        subprocess.run(["docker", "--version"], check=True, stdout=subprocess.PIPE)
        print("Docker is installed.")
    except subprocess.CalledProcessError:
        print("Docker is not installed. Please install Docker and try again.")
        sys.exit(1)

def check_docker_compose():
    """Check if Docker Compose is installed."""
    try:
        subprocess.run(["docker-compose", "--version"], check=True, stdout=subprocess.PIPE)
        print("Docker Compose is installed.")
    except subprocess.CalledProcessError:
        print("Docker Compose is not installed. Please install Docker Compose and try again.")
        sys.exit(1)

def build_docker_image():
    """Build the Docker image."""
    print("Building Docker image...")
    result = subprocess.run(["docker-compose", "build"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        print("Error building the Docker image:")
        print(result.stderr.decode())
        sys.exit(1)
    print("Docker image built successfully.")

def run_docker_container():
    """Run the Docker container."""
    print("Starting Docker container...")
    result = subprocess.run(["docker-compose", "up", "-d"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    if result.returncode != 0:
        print("Error starting the Docker container:")
        print(result.stderr.decode())
        sys.exit(1)
    print("Docker container started successfully.")

def main():
    """Main function to automate the deployment process."""
    print("Checking system requirements...")
    check_docker()
    check_docker_compose()

    print("Deploying the web application...")
    build_docker_image()
    run_docker_container()

    print("Deployment completed successfully!")

if __name__ == "__main__":
    main()
